<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on congx.dev</title>
    <link>https://congx.dev/posts/</link>
    <description>Recent content in Posts on congx.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-au</language>
    <lastBuildDate>Thu, 06 May 2021 00:33:00 +1100</lastBuildDate><atom:link href="https://congx.dev/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Demysitifying the Cognitive Enterprise - What is it?</title>
      <link>https://congx.dev/posts/cognitive-enterprise-what-is-it/</link>
      <pubDate>Thu, 06 May 2021 00:33:00 +1100</pubDate>
      
      <guid>https://congx.dev/posts/cognitive-enterprise-what-is-it/</guid>
      <description>This article was original posted on LinkedIn.
 This article is co-authored with Kevin Nguyen. The opinions shared in this article are our own and do not reflect those of our employer(s).
What is a cognitive enterprise? The short version Cognitive enterprise is a data-driven organisation that has a thorough understanding of the technology between different business units and why they exist, i.e., what they can do for their users and their customers.</description>
    </item>
    
    <item>
      <title>Multi-objective Optimisation with IBM ILOG CPLEX - Part 2</title>
      <link>https://congx.dev/posts/multiobjective-optimisation-with-ibm-ilog-cplex-2/</link>
      <pubDate>Mon, 04 Jan 2021 00:33:00 +1100</pubDate>
      
      <guid>https://congx.dev/posts/multiobjective-optimisation-with-ibm-ilog-cplex-2/</guid>
      <description>Recap part 1 In part 1, I created some multi-objective optimisation models with OPL using both the CP Optimiser and CPLEX Optimiser. However, I hit a no-documentation barrier when started using the staticLexFull() function and found the DOcplex.mp Python example to be a more readable.
In this post, I&amp;rsquo;ll take a look at first converting the existing weighted model to Python, proceed with adding additional weights to the model and finally deploy the model to run on IBM Cloud with Watson Machine Learning.</description>
    </item>
    
    <item>
      <title>Multi-objective Optimisation with IBM ILOG CPLEX - Part 1</title>
      <link>https://congx.dev/posts/multiobjective-optimisation-with-ibm-ilog-cplex-1/</link>
      <pubDate>Sun, 03 Jan 2021 23:33:00 +1100</pubDate>
      
      <guid>https://congx.dev/posts/multiobjective-optimisation-with-ibm-ilog-cplex-1/</guid>
      <description>Eons ago (2015), I played this online game called Tribal Wars 2 and created a report that summarised the best troops combination to build. Recently, however, the game maker Innogames wiped their online forums to its pre-historic ages, which happened to include my report on army sizes. Back then, I used MATLAB Optimization Toolbox. Now I&amp;rsquo;m going to give IBM ILOG CPLEX a try and see how it goes.
In this first post, I&amp;rsquo;m going to:</description>
    </item>
    
    <item>
      <title>Custom Light Theme for Hugo Terminal</title>
      <link>https://congx.dev/posts/custom-light-terminal-theme/</link>
      <pubDate>Sat, 02 Jan 2021 03:55:00 +1100</pubDate>
      
      <guid>https://congx.dev/posts/custom-light-terminal-theme/</guid>
      <description>I really like Panr&amp;rsquo;s Hugo theme Terminal. It&amp;rsquo;s beautiful. For long texts, however, the contrast can make texts a bit hard to read. This post outlines the files I made customisations to, to create a light theme with a dark blue accent. This is in no way a complete customisation of the Terminal theme, just enough of it that fits my current needs.
Create a new theme variant To begin creating a new theme variant, I use my existing blog https://congx.</description>
    </item>
    
    <item>
      <title>If a tree falls in a forest and no one is around to hear it, does it make a sound?</title>
      <link>https://congx.dev/posts/devrel-reflection-2020/</link>
      <pubDate>Sun, 13 Dec 2020 14:40:00 +0000</pubDate>
      
      <guid>https://congx.dev/posts/devrel-reflection-2020/</guid>
      <description>Next April will mark the second-year anniversary of becoming a developer advocate at IBM. Developer advocacy is an interesting role to work in. It‚Äôs a mix between technical sales, event marketing, community building and teaching. As a fairly fresh developer advocate, it took me a long time to figure out what this role entails, what my boundaries are and how I can make sense of the constant changing nature of the role; and I‚Äôm still learning.</description>
    </item>
    
    <item>
      <title>Transcription: It can&#39;t be wrong</title>
      <link>https://congx.dev/posts/transcription-it-cant-be-wrong/</link>
      <pubDate>Sun, 19 Apr 2020 09:13:00 +0000</pubDate>
      
      <guid>https://congx.dev/posts/transcription-it-cant-be-wrong/</guid>
      <description>Sung beautifully by Seven of Nine while she was under the neural link that falsely made her believed she was the lounge singer in the night club Le Coeur de Lion during a holographic recreation of 1944 Sainte Claire in occupied France, &amp;ldquo;It Can&amp;rsquo;t Be Wrong&amp;rdquo; is a beautiful arrangement with a soft accompanied bar piano. Sadly, however, the recording was never released and a part of the song was voiced over by other characters in the show.</description>
    </item>
    
    <item>
      <title>XPSL Docs: Functional requirements</title>
      <link>https://congx.dev/posts/xpsl-docs-functional-requirements/</link>
      <pubDate>Fri, 13 Dec 2019 04:57:00 +0000</pubDate>
      
      <guid>https://congx.dev/posts/xpsl-docs-functional-requirements/</guid>
      <description>There are 4 types in XPSL: user, room, track, playlist. This blog post lists the functional requirements for each of these types.
XPSL User  A user must have access to either Spotify or Apple Music A user must authorise XPSL for their Spotify and/or Apple Music account User can only belong to 1 room User can create a room or join a room once they have authorised XPSL to access Spotify and/or Apple Music XPSL will refresh Spotify access token on the user‚Äôs behalf Each XPSL user has a unique ID A user must have a display name A user could have a short name XPSL user client is a NATS client that subscribe to a XPSL Room (NATS Topic)  XPSL Room  Each room has a group of users who manage a shared playlist Room is a NATS topic that multiple users can subscribe to Each room has a topic ID of xpsl-room- Each room can have 1 or more users.</description>
    </item>
    
    <item>
      <title>Building and shipping Hugo posts with Travis CI for Github Pages</title>
      <link>https://congx.dev/posts/build-ship-hugo-travisci-gh-pages/</link>
      <pubDate>Tue, 10 Dec 2019 14:40:00 +0000</pubDate>
      
      <guid>https://congx.dev/posts/build-ship-hugo-travisci-gh-pages/</guid>
      <description>Since my blog source code is private, this blog post contains snippets of how I set up Travis CI to build and push Hugo&amp;rsquo;s public folder to another repository that hosts my public Github Pages.
It&amp;rsquo;s a simple solution, yet the top Google results only feature custom scripts ü§∑ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÇÔ∏è.
Configuring Travis CI .travis.yml
--- install: - curl -LO https://github.com/gohugoio/hugo/releases/download/v0.59.1/hugo_0.59.1_Linux-64bit.deb - sudo dpkg -i hugo_0.59.1_Linux-64bit.deb script: - git submodule init - git submodule update - hugo - rm -Rf .</description>
    </item>
    
    <item>
      <title>XPSL Docs: Motivation and Overview</title>
      <link>https://congx.dev/posts/xpsl-docs-motivation-overview/xpsl-docs-overview-and-motivation/</link>
      <pubDate>Tue, 10 Dec 2019 11:39:00 +0000</pubDate>
      
      <guid>https://congx.dev/posts/xpsl-docs-motivation-overview/xpsl-docs-overview-and-motivation/</guid>
      <description>Motivation Walking on the street, listening to a song you like, sharing that song with your friends, do a bit of silent dancing on the street, groove a little bit. Maybe you like that song your friend suggests, and wants to add it into your own music library.
Except you are on Apple Music and your mate is on Spotify. There are no services out there that offers a unified listening experience across multiple music providers.</description>
    </item>
    
    <item>
      <title>How Toddler plays</title>
      <link>https://congx.dev/posts/how-toddler-plays/</link>
      <pubDate>Fri, 20 Sep 2019 16:16:00 +1100</pubDate>
      
      <guid>https://congx.dev/posts/how-toddler-plays/</guid>
      <description>Back when I first started looking into making the manager (like 4 years ago), looking through Github&amp;rsquo;s projects on automating Tribal Wars 2, I found most, if not all, of the projects relies on automating the browser instead of utilising the the game&amp;rsquo;s WebSocket connection. Therefore, I think it&amp;rsquo;s worthwhile to capture the essence of how the game client talks to the game server. Hopefully, this blog post may be helpful to those looking to automate this game.</description>
    </item>
    
    <item>
      <title>Logging with Papertrail</title>
      <link>https://congx.dev/posts/logging-with-papertrail/</link>
      <pubDate>Sun, 23 Jun 2019 16:44:00 +1100</pubDate>
      
      <guid>https://congx.dev/posts/logging-with-papertrail/</guid>
      <description>IBM Cloud is deprecating Kibana as a method to view Cloud Foundry logs. Moving forward, they are recommending LogDNA as a 3rd-party service. That&amp;rsquo;s cool. The process of logging Cloud Foundry is simple enough anyway.
With the general CF CLI, you would:
 Create a user-provided service with cf cups DRAIN-NAME -l SYSLOG-URL. Bind an app to the created service instance with name DRAIN-NAME as follows cf bind-service APP-NAME DRAIN-NAME.  Simple right?</description>
    </item>
    
    <item>
      <title>Birth of Toddler</title>
      <link>https://congx.dev/posts/birth-of-toddler/</link>
      <pubDate>Thu, 13 Jun 2019 08:51:00 +1100</pubDate>
      
      <guid>https://congx.dev/posts/birth-of-toddler/</guid>
      <description>Tribal Wars 2 Manager is now called Toddler!
Why? It&amp;rsquo;s a shorter name.
Additionally, there had been a few changes to project Toddler:
 RabbitMQ swapped out for NATS Project repos hosted on Github auth-svc is now called toddler-auth data-svc is now called toddler-world-data Elasticsearch is removed completely to simplify development World data is stored into a MongoDB database Deployment is sharply turned to Cloud Foundry - so much cheaper  </description>
    </item>
    
    <item>
      <title>Beyond the basics with Cloud Foundry</title>
      <link>https://congx.dev/posts/beyond-the-basics-with-cloud-foundry/</link>
      <pubDate>Wed, 12 Jun 2019 23:00:00 +1100</pubDate>
      
      <guid>https://congx.dev/posts/beyond-the-basics-with-cloud-foundry/</guid>
      <description>The advent of Docker changed the way we develop applications. Once you had written a Dockerfile and built the image, your application will run (almost) anywhere, regardless of the underlying operating system, and best of all, it just works. You can then expose ports, map volumes to persist data and deploy your image in Docker Swarm or Kubernetes (K8s). With great flexibility, however, comes greater costs, whether that is increased developer&amp;rsquo;s skillset requirements and time spent on writing multiple K8s YAML config files, or pricier services on your favourite cloud provider.</description>
    </item>
    
    <item>
      <title>There will be ThinkPad keyboard controllers</title>
      <link>https://congx.dev/posts/thinkpad-keyboards-controllers/</link>
      <pubDate>Sun, 31 Mar 2019 12:25:00 +1100</pubDate>
      
      <guid>https://congx.dev/posts/thinkpad-keyboards-controllers/</guid>
      <description>A long long long time ago, finding an absence of projects on the internet to re-use a ThinkPad T60 keyboard to be used as a USB keyboard, I set out to research, make USB adapter kits and write documentation to this project. It was a success! I learned how to:
 Hunt down ThinkPad laptop schematics Design circuits in Eagle and eventually Altium Designer 3D modelling in Autodesk Inventor and rendering in Autodesk Showcase Send out PCB gerbers to abroad board houses for prototyping Write firmware for my first ever first USB microcontroller MSP430F5510 Develop a HID bridge firmware for Bluetooth 4.</description>
    </item>
    
    <item>
      <title>Tribal Wars 2 Manager - Authentication Service</title>
      <link>https://congx.dev/posts/tribal-wars-2-manager-authentication-service/</link>
      <pubDate>Mon, 31 Dec 2018 21:32:00 +1100</pubDate>
      
      <guid>https://congx.dev/posts/tribal-wars-2-manager-authentication-service/</guid>
      <description>In the previous post, I mentioned the 6 services essential to wrap up the Tribal Wars 2 manager: data collection, alert, farm, ops and build-recruit services. Before that to happen however, we need to figure out a way to talk to the game i.e. the authentication service.
Core service overview The source code for this service is hosted at https://bitbucket.org/cn-d/auth-service.
The authentication service is sandwiched between the 6 services and the game server.</description>
    </item>
    
    <item>
      <title>Tribal Wars 2 Manager - Services Overview</title>
      <link>https://congx.dev/posts/tribal-wars-2-manager-services-overview/</link>
      <pubDate>Wed, 26 Dec 2018 06:53:00 +1100</pubDate>
      
      <guid>https://congx.dev/posts/tribal-wars-2-manager-services-overview/</guid>
      <description>Merry Christmas everyone, and Happy Boxing day to folks in the Southern hemisphere.
In the last post, I wrote about the tech I&amp;rsquo;d like to play with for this project, but never really go into what each of the services does. This prompts the question to some of my mates who don&amp;rsquo;t play Tribal Wars &amp;ldquo;does this application need to be this complex?&amp;rdquo;. Besides getting all the tech in, what functionalities and services should this project provide to the player?</description>
    </item>
    
    <item>
      <title>Adding Talk to Ghost</title>
      <link>https://congx.dev/posts/add-talk-commenting-to-ghost/</link>
      <pubDate>Sat, 22 Dec 2018 00:20:00 +1100</pubDate>
      
      <guid>https://congx.dev/posts/add-talk-commenting-to-ghost/</guid>
      <description>Back when this blog still ran on Ghost, I added Mozilla Coral Project&amp;rsquo;s Talk to Ghost, and&amp;hellip;
Legit, adding Talk to Ghost is not as straightforward as the documentation. While the Quick Start is simple enough on running Talk on your own server, what they don&amp;rsquo;t mention is the amount of overhead setup that comes with it. Being a noob to Ghost, NGINX and hosting a blog on my own server made the setup experience frustrating for me.</description>
    </item>
    
    <item>
      <title>Tribal Wars 2 Manager - Architecture</title>
      <link>https://congx.dev/posts/tribal-wars-2-manager-architecture/</link>
      <pubDate>Thu, 20 Dec 2018 17:24:00 +1100</pubDate>
      
      <guid>https://congx.dev/posts/tribal-wars-2-manager-architecture/</guid>
      <description>Earlier this year, I developed a single process NodeJS application for all the services in this manager (shown down below) and it started to raise out-of-memory errors due to Node&amp;rsquo;s limitation. This project aims to eliminate this problem by splitting the manager into multiple services.
This blog post serves a documentation for the high-level design of my Tribal Wars 2 manager. The development for this project is not about cheating in Tribal Wars 2 but using the game as a motivator to learn new technologies.</description>
    </item>
    
    <item>
      <title>What is this blog about?</title>
      <link>https://congx.dev/posts/my-first-post/</link>
      <pubDate>Wed, 19 Dec 2018 12:12:01 +1100</pubDate>
      
      <guid>https://congx.dev/posts/my-first-post/</guid>
      <description>This is my fresh start to personal blogging. Back in 2012, I was a huge advocate for Adobe Flash despite Apple&amp;rsquo;s decision to exclude it from the OS&amp;rsquo;s and remote-controlled toys. So I started flashandrc.wordpress.com. After a while, my interests grew past Adobe Flash and remote-controlled helicopters, and evolved onto transcribing music that I like and making electronics. Soon, my blog became the go-to knowledge base for ThinkPad keyboards and Machinarium bossa nova guitar piece transcription.</description>
    </item>
    
    <item>
      <title>Machinarium transcription</title>
      <link>https://congx.dev/posts/machinarium/</link>
      <pubDate>Tue, 08 Jan 2013 01:12:01 +0000</pubDate>
      
      <guid>https://congx.dev/posts/machinarium/</guid>
      <description>Low-key, Machinarium was my favourite iPad game. It was an adventure-collecting game, where a little robot with his extendable arms and legs, going around his little world to collect items to help out his friend (I think, it&amp;rsquo;s been a while). In this one particular scene, when the robot enters a bar, there is this beautiful bossa nova piece. After a few fruitless Google searches, I decided to transcribe the piece.</description>
    </item>
    
  </channel>
</rss>
